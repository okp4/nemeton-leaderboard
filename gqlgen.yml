# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - graphql/*.graphqls

# Where should the generated server code go?
exec:
  filename: graphql/generated/generated.go
  package: generated

# Uncomment to enable federation
# federation:
#   filename: graphql/generated/federation.go
#   package: generated

# Where should any generated models go?
model:
  filename: graphql/model/models_gen.go
  package: model

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: graphql
  package: graphql

# Optional: turn on use ` + "`" + `gqlgen:"fieldName"` + "`" + ` tags in your models
# struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: false

# Optional: turn off to make struct-type struct fields not use pointers
# e.g. type Thing struct { FieldA OtherThing } instead of { FieldA *OtherThing }
# struct_fields_always_pointers: true

# Optional: turn off to make resolvers return values instead of pointers for structs
# resolvers_always_return_pointers: true

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
#  - "okp4/nemeton-leaderboard/graphql/model"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  Phase:
    model:
      - okp4/nemeton-leaderboard/app/nemeton.Phase
  Task:
    model:
      - okp4/nemeton-leaderboard/app/nemeton.Task
  Validator:
    model:
      - okp4/nemeton-leaderboard/app/nemeton.Validator
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Time:
    model:
      - github.com/99designs/gqlgen/graphql.Time
  AccAddress:
    model:
      - okp4/nemeton-leaderboard/graphql/scalar.AccAddress
  ValoperAddress:
    model:
      - okp4/nemeton-leaderboard/graphql/scalar.ValoperAddress
  PGPKeyID:
    model:
      - github.com/99designs/gqlgen/graphql.Uint64
  URI:
    model:
      - okp4/nemeton-leaderboard/graphql/scalar.URI
  Cursor:
    model:
      - okp4/nemeton-leaderboard/graphql/scalar.Cursor
